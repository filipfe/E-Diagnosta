var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import React, { Children, cloneElement, isValidElement } from "react";
export default function OnScroll(_a) {
    var children = _a.children, className = _a.className, stagger = _a.stagger, onScroll = _a.onScroll;
    var delay = 0;
    var defaultProps = __assign({}, (onScroll && { onScroll: true }));
    var childrenWithScroll = Children.map(children, function (child, i) {
        var dynamicProps = __assign({}, (stagger && { delay: delay += stagger * i }));
        if (isValidElement(child)) {
            return cloneElement(child, __assign(__assign({}, defaultProps), dynamicProps));
        }
        return children;
    });
    return React.createElement("div", { className: className }, childrenWithScroll);
}
