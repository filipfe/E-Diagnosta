"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
function Control(props) {
    var element = props.element, className = props.className, opacity = props.opacity, _a = props.duration, duration = _a === void 0 ? 400 : _a, _b = props.ease, ease = _b === void 0 ? 'cubic-bezier(0, 0, 1.0, 1.0)' : _b, _c = props.delay, delay = _c === void 0 ? 0 : _c, x = props.x, y = props.y, _d = props.rotate, rotate = _d === void 0 ? 0 : _d, onScroll = props.onScroll, _e = props.viewPort, viewPort = _e === void 0 ? 0.8 : _e, backgroundColor = props.backgroundColor, color = props.color;
    var firstRender = (0, react_1.useRef)(true);
    var timer = (0, react_1.useRef)(undefined);
    var wrapper = (0, react_1.useRef)(null);
    var isInViewPort = (0, react_1.useRef)(false);
    // default values for styles
    var _f = (0, react_1.useState)(__assign({}, (opacity && { opacity: 0 }))), styles = _f[0], setStyles = _f[1];
    // different cases for x and y since you can provide a number or a string with sth like % value
    var xValue = typeof x === 'number' ? x + 'px' : typeof x === 'string' ? x : '';
    var yValue = typeof y === 'number' ? y + 'px' : typeof y === 'string' ? y : '';
    // full transform syntax for all cases
    var translateValue = x && y ? "translate(".concat(xValue, ", ").concat(yValue, ")") : y ? "translateX(".concat(yValue, ")") : x ? "translateX(".concat(xValue, ")") : '';
    // rotate value
    var rotateValue = "rotate(".concat(rotate, "deg)");
    var defaultStyles = __assign(__assign({}, (opacity && { opacity: 0 })), { transform: "".concat(translateValue, " ").concat(rotateValue) });
    var setDefaultStyles = function () {
        setStyles(defaultStyles);
    };
    var setElementInViewPort = function () {
        var _a;
        var fromElement = (_a = wrapper.current) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect().top;
        isInViewPort.current = fromElement ? fromElement < window.innerHeight * viewPort : false;
    };
    // const handleReverse = ():boolean => {
    //     if(reverse && styles !== defaultStyles) setDefaultStyles()
    //     return reverse ? true : false
    // }
    // function setting styles for the element
    var setTimerWithStyles = function () {
        timer.current = setTimeout(function () {
            setStyles(function (prev) {
                return __assign(__assign(__assign(__assign(__assign({}, prev), { transform: 'none' }), (opacity && { opacity: opacity })), (backgroundColor && { backgroundColor: backgroundColor })), (color && { color: color }));
            });
        }, firstRender.current ? 1 : duration / 2);
    };
    (0, react_1.useLayoutEffect)(function () {
        // testing purposes; setting default values for styles
        if (!firstRender.current)
            setDefaultStyles();
        firstRender.current = false;
        if (x || y || rotate) {
            setStyles(function (prev) {
                return __assign(__assign({}, prev), { transform: "".concat(translateValue, " ").concat(rotateValue) });
            });
        }
    }, []);
    (0, react_1.useEffect)(function () {
        // changing values of different style properties
        if (!onScroll)
            setTimerWithStyles();
        // onScroll mechanics
        var scrollCallback = function () {
            setElementInViewPort();
            if (isInViewPort.current)
                setTimerWithStyles();
        };
        if (onScroll) {
            scrollCallback();
            window.addEventListener('scroll', scrollCallback);
            return function () {
                clearTimeout(timer.current);
                window.removeEventListener('scroll', scrollCallback);
            };
        }
        return function () { return clearTimeout(timer.current); };
    }, []);
    return react_1.default.createElement("div", { ref: wrapper, className: className, style: __assign(__assign({}, styles), { transition: "all ".concat(duration, "ms ").concat(ease, " ").concat(delay, "ms"), maxWidth: 'max-content' }) }, element);
}
exports.default = Control;
